$direction-markup : false
$omg-angle: 0

$omg-default-angle: 0 !default;
$omg-default-levels: 15 !default;
$omg-default-style: "flat" !default;


@mixin omg-box($color, $direction: $omg-default-angle; $levels: $omg-default-levels, $style: $omg-default-style, $darken-amount: 0) {

}




@mixin omg-text($color, $direction: 0, $levels: 15 , $style: "flat",  $darken-amount: 0) {

}

    $shadowColor : $color
    $shadow-markup : ""
    $darken-amount: $darken-amount

    // Loop through all the levels specified
    @for $i from 0 through $levels
        //for each level apply a text shadow at the correct angle
        @include omg-text-offset($direction, $i)

        @if $style == "shaded"
            // Darken the shadow text color
            $shadowColor : darken($shadowColor, $i * ($darken-amount/100))
        @else if $style == "flat"
            // Keep same color
            $shadowColor : $color

        // Update the string that is used to create the text shadow
        $shadow-markup : $shadow-markup + $direction-markup + $shadowColor
        // If you are not on the last level add a comma at the end of the string so you can apply the next text shadow
        @if $i < $levels
            $shadow-markup: $shadow-markup + ", "

    // After loop finishes add the text shadow
    @include text-shadow(unquote($shadow-markup))


@mixin omg-offset($angle, $color1, $levels1, $color2, $levels2)

    $shadow-markup : ""

    @include omg-text-offset($angle, $levels1)
    $shadow-markup: $shadow-markup + $direction-markup + $color1 + ", "

    @include omg-text-offset($angle, $levels2)
    $shadow-markup: $shadow-markup + $direction-markup + $color2

    @include text-shadow(unquote($shadow-markup))


@mixin omg-build-shadows() {

}


@function omg-calculate-angle($direction, $i) {
    @if $direction == "top"                 { $direction: 0; }
    @else if $direction == "top-right"      { $direction: 45; }
    @else if $direction == "right"          { $direction: 90; }
    @else if $direction == "bottom-right"   { $direction: 135; }
    @else if $direction == "bottom"         { $direction: 180; }
    @else if $direction == "bottom-left"    { $direction: 225; }
    @else if $direction == "left"           { $direction: 270; }
    @else if $direction == "top-left"       { $direction: 315; }
    @else                                   {$direction: $direction }

    $omg-angle: $direction * (pi()/180);

    // Calculate the correct angle
    $direction-markup : ($i) * sin($omg-angle)  + "px " + -($i) * cos($omg-angle) + "px 0 ";
}



